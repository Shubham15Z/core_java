Q1.Given an array of N integers. Find the first element that occurs at least K number of times.
 
Example 1:
Input :
N = 7, K = 2
A[] = {1, 7, 4, 3, 4, 8, 7}
Output :
7

Code:
public class Question1
{
	public static void main(String arg[])
	{
		int a[] = {1,7, 4, 3, 4, 8, 7};
		int k = 2;

		for(int i = 0; i < a.length; i++)
		{
			int count = 1;
			int j;
			for(j = i+1; j < a.length; j++)
			{
				if(a[i] == a[j])
				{
					count++;
				}
			}
			if(j == a.length)
			{
				if(count >= k)
				{
					System.out.print(a[i]+" ");
					break;
				}
			}
			
		}
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question1.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question1
7


**************************************************************************************************


Q2.Given an array A of positive integers. Your task is to find the leaders in the array. 
An element of array is leader if it is greater than or equal to all the elements to its right side. 
The rightmost element is always a leader.

Example 1:

Input:
n = 6
A[] = {16,17,4,3,5,2}
Output: 17 5 2

Code:
public class Question2
{
	public static void main(String arg[])
	{
		int a[] = {16,17,4,3,5,2};
		
		for(int i = 0; i < a.length; i++)
		{
			int j;
			for(j = i+1; j < a.length; j++)
			{
				if(a[i] < a[j])
				{
					break;
				}
			}
			if(j == a.length)
			{
				System.out.print(a[i]+" ");	
			}
			
		}
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question2.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question2
17 5 2


***************************************************************************************


Q3.Given an array A of n positive numbers. The task is to find the first Equilibrium Point in an array.
Equilibrium Point in an array is a position such that the sum of elements before it is equal to the sum of elements after it.

Note: Retun the index of Equilibrium point. (1-based index)

Example 1:

Input:
n = 5
A[] = {1,3,5,2,2}
Output: 3

Code:
public class Question3
{
	public static void main(String arg[])
	{
		int A[] = {1,3,5,2,2};
		
		for(int i = 0; i < A.length; i++)
		{
			int lsum = 0, rsum = 0;
			for(int j = 0; j < i; j++)
			{
				lsum += A[j];
			}

			for(int j = i+1; j < A.length; j++)
			{
				rsum += A[j];
			}

			if(lsum == rsum)
			{
				System.out.println("The Equilibrium element is : "+A[i]);
				System.out.println("The Equilibrium element index is : "+i);
				System.out.println("The Equilibrium element position is : "+(i+1));
			}
		}
	}
}


Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question3.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question3
The Equilibrium element is : 5
The Equilibrium element index is : 2
The Equilibrium element position is : 3



******************************************************************************************


Q4.You are given two arrays, A and B, of equal size N. The task is to find the minimum value of A[0] * B[0] + A[1] * B[1] + .... + A[N-1] * B[N-1], 
where shuffling of elements of arrays A and B is allowed.


Example 1:
Input:
N = 3
A[] = {3, 1, 1}
B[] = {6, 5, 4}
Output:
23

Code:
public class Question4
{
	public static void main(String arg[])
	{
		int A[] = {3, 1, 1};
		int B[] = {6, 5, 4};

		for(int i = 0; i < A.length; i++)
		{	
			for(int j = i+1; j < A.length; j++)
			{
				if(A[i] > A[j])
				{
					int temp = A[i];
					A[i] = A[j];
					A[j] = temp;
				}	
			}	
		}
		
		int sum = 0;
		for(int i = 0; i < A.length; i++)
		{
			sum = sum + A[i]*B[i];	
		}

		System.out.println("The minimum value is : "+sum);
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question4.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question4
The minimum value is : 23


***********************************************************************************


Q5.Given two sorted arrays arr1 and arr2 of size N and M respectively and an element K. 
The task is to find the element that would be at the kâ€™th position of the final sorted array.
Example 1:

Input:
arr1[] = {2, 3, 6, 7, 9}
arr2[] = {1, 4, 8, 10}
k = 5
Output:
6

Code:
public class Question5
{
	public static void main(String arg[])
	{
		int arr1[] = {2, 3, 6, 7, 9};
		int arr2[] = {1, 4, 8, 10};
		int arr3[] = new int [arr1.length+arr2.length];
		int k = 5;
		
		for(int i = 0; i < arr1.length; i++)
		{
			arr3[i] = arr1[i];
		}
		for(int j = 0; j < arr2.length; j++)
		{	
			arr3[arr1.length+j] = arr2[j];	
		}
	
		

		for(int i = 0; i < arr3.length; i++)
		{	
			for(int j = i+1; j < arr3.length; j++)
			{
				if(arr3[i] > arr3[j])
				{
					int temp = arr3[i];
					arr3[i] = arr3[j];
					arr3[j] = temp;
				}	
			}	
		}
		
		System.out.println("The element at gievn position is : ");
		for(int j = 0; j < arr3.length; j++)
		{
			if(k == j)	
			System.out.println(arr3[j-1]+" ");	
		}
	}
}


Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question5.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question5
The element at gievn position is :
6


***************************************************************************************


Q6.Given an array of size N filled with numbers from 1 to N-1 in random order. 
The array has only one repetitive element. The task is to find the repetitive element.

Examples:

Input: a[] = {1, 3, 2, 3, 4}
Output: 3

Code:

public class Question6
{
	public static void main(String arg[])
	{
		int a[] = {1, 3, 2, 3, 4};
		
		System.out.println("The only repetative element in array is : ");
		for(int i = 0; i < a.length; i++)
		{
			int count = 0;	
			for(int j = i+1; j < a.length; j++)
			{
				if(a[i] == a[j])
				{
					System.out.print(a[i]);
					count++;
				}	
			}
			if(count > 0)
			{
				break;
			}	
		}
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question6.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question6
The only repetative element in array is :
3

********************************************************************************

Q7.Given two unsorted arrays that represent two sets (elements in every array are distinct), 
find the union and intersection of two arrays.

Example:

arr1[] = {7, 1, 5, 2, 3, 6}
arr2[] = {3, 8, 6, 20, 7}
Then your program should print Union as {1, 2, 3, 5, 6, 7, 8, 20} and Intersection as {3, 6, 7}. 
Note that the elements of union and intersection can be printed in any order.

Code:

public class Question7
{
	public static void main(String arg[])
	{
		int arr1[] = {7, 1, 5, 2, 3, 6};
		int arr2[] = {3, 8, 6, 20, 7};
		int arr3[] = new int [arr1.length + arr2.length];
		
		for(int i = 0; i < arr1.length; i++)
		{
			arr3[i] = arr1[i];
		}

		for(int i = 0; i <arr2.length; i++)
		{
			arr3[arr1.length+i] = arr2[i];
		}

		System.out.println("The Intersection elements in array are : ");
		for(int i = 0; i < arr3.length; i++)
		{
			for(int j = i+1; j < arr3.length; j++)
			{
				if(arr3[i] == arr3[j])
				{
					System.out.print(arr3[i]+", ");
				}
			}	
				
		}

		for(int i = 0; i < arr3.length; i++)
		{	
			for(int j = i+1; j < arr3.length; j++)
			{
				if(arr3[i] == arr3[j])
				{
					arr3[j] = -1;
				}	
			}	
		}

		System.out.println();
		System.out.println("The Union elements in array are : ");
		for(int i = 0; i < arr3.length; i++)
		{	
			if(arr3[i] != -1)
			{
				System.out.print(arr3[i]+", ");
			}	
		}

		
		
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question7.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question7
The Intersection elements in array are :
7, 3, 6,
The Union elements in array are :
7, 1, 5, 2, 3, 6, 8, 20,


************************************************************************************


Q8.Given three arrays sorted in non-decreasing order, print all common elements in these arrays.

Examples:

Input:
ar1[] = {1, 5, 10, 20, 40, 80}
ar2[] = {6, 7, 20, 80, 100}
ar3[] = {3, 4, 15, 20, 30, 70, 80, 120}
Output: 20, 80

Code:

public class Question8
{
	public static void main(String arg[])
	{
		int arr1[] = {1, 5, 10, 20, 40, 80};
		int arr2[] = {6, 7, 20, 80, 100};
		int arr3[] = {3, 4, 15, 20, 30, 70, 80, 120};
	
		System.out.println("The Common elements in array are : ");
		for(int i = 0; i < arr1.length; i++)
		{
			for(int j = 0; j < arr2.length; j++)
			{
				for(int k = 0; k < arr3.length; k++)
				{
					if(arr1[i] == arr2[j] && arr1[i] == arr3[k])
					{
						System.out.print(arr1[i]+", ");
					}
				}
			}
		}
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question8.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question8
The Common elements in array are :
20, 80,


***********************************************************************************


Q9.Given an array of integers. All numbers occur twice except one number which occurs once. Find the number
Example :

Input:  arr[] = {2, 3, 5, 4, 5, 3, 4}
Output: 2

Code:
public class Question9
{
	public static void main(String arg[])
	{
		int a[] = {2, 3, 5, 4, 5, 3, 4};
		
		System.out.println("The element which occurs once is : ");
		for(int i = 0; i < a.length; i++)
		{
			int count = 0;	
			for(int j = i+1; j < a.length; j++)
			{
				if(a[i] == a[j])
				{
					count++;
				}	
			}
			if(count == 0)
			{
				System.out.print(a[i]);
				break;
			}	
		}
	}
}


Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question9.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question9
The element which occurs once is :
2


**************************************************************************************


Q10.Given an array arr[] of integers, segregate even and odd numbers in the array. 
Such that all the even numbers should be present first, and then the odd numbers.

Examples:  

Input: arr[] = 1 9 5 3 2 6 7 11
Output: 2 6 5 3 1 9 7 11

Code:
{
	public static void main(String arg[])
	{
		int a[] = {1, 9, 5, 3, 2, 6, 7, 11};
		int b[] = new int [a.length];
		int index = 0;

		for(int i = 0; i < a.length; i++)
		{
			if(a[i] % 2 == 0)
			{
				b[index] = a[i];
				index++;
			}	
		}

		for(int i = 0; i <a.length; i++)
		{
			if(a[i] % 2 != 0)
			{
				b[index] = a[i];
				index++;
			}
		}

		System.out.println("The even odd order of element is : ");
		for(int i = 0; i < b.length; i++)
		{
			System.out.print(b[i]+" ");
		}
	}
}

Output:
C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>javac Question10.java

C:\Users\shubh\work\Codenera\Java\Array\ArrayAssignment3.0>java Question10
The even odd order of element is :
2 6 1 9 5 3 7 11




